# Copyright 2019 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

include "backend.conf"

appName = fh-registration

play {
  application.loader = "uk.gov.hmrc.play.bootstrap.ApplicationLoader"

  modules {
    # Provides an implementation of AuditConnector. Use `uk.gov.hmrc.play.bootstrap.AuditModule` or create your own.
    # An audit connector must be provided.
    enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"
    enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"

    # Provides an implementation of MetricsFilter. Use `uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule` or create your own.
    # A metric filter must be provided
    enabled += "uk.gov.hmrc.play.bootstrap.graphite.GraphiteMetricsModule"

    # Provides an implementation and configures all filters required by a Platform frontend microservice.
    enabled += "uk.gov.hmrc.play.bootstrap.MicroserviceModule"

    enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"
    enabled += "uk.gov.hmrc.fhregistration.FhModule"
  }

  http {
    # Primary entry point for all HTTP requests on Play applications
    requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"

    filters = "uk.gov.hmrc.play.bootstrap.filters.MicroserviceFilters"
    errorHandler = "uk.gov.hmrc.play.bootstrap.http.JsonErrorHandler"

  }

  # The secret key is used to secure cryptographics functions.
  # If you deploy your application to several instances be sure to use the same key!
  crypto.secret = "3i8L2OA21GxgoelUfJK885Bt82Cb7BpmGUd1eXXRYQzFxwqGZF6vu6FTxCSeGW5F"
}

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Session configuration
# ~~~~~
application.session.httpOnly = false

application.session.secure = false

# The application languages
# ~~~~~
application.langs = "en"

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
application.router = prod.Routes

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
  # 300 is the default, you may need to change this according to your needs
  confidenceLevel = 300

  com.kenshoo.play.metrics.MetricsController = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }

  uk.gov.hmrc.fhregistration.controllers.MicroserviceHelloWorld = {
    needsAuth = false
    needsLogging = false
    needsAuditing = false
  }

}

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root = ERROR

# Logger used by the framework:
logger.play = INFO

# Logger provided to your application:
logger.application = DEBUG

mongo-async-driver {
  akka {
    loglevel = WARNING
  }
}

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  name = ${appName}
  rateUnit = SECONDS
  durationUnit = SECONDS
  showSamples = true
  jvm = true
  enabled = true
}

# Microservice specific config

auditing {
  enabled = true
  traceRequests = true
  consumer {
    baseUri {
      host = localhost
      port = 8100
    }
  }
}

mongodb {
  uri = "mongodb://localhost:27017/fhdds"
}

microservice {
  metrics {
    graphite {
      host = graphite
      port = 2003
      prefix = play.${appName}.
      enabled = false
    }
  }

  services {

    auth {
      host = localhost
      port = 8500
    }

    des-service {
      host = localhost
      port = 1120
      environment = "isit"
      authorization-token = "12312312"
      uri = "/fulfilment-diligence/subscription"
      baseuri = "/fhdds-stubs"
    }

    tax-enrolments {
      host = localhost
      port = 9995
      serviceName = "HMRC-OBTDS-ORG"
      callback = "http://localhost:1119/fhdds/tax-enrolment/callback/subscriptions"
    }

    email {
      host = localhost
      port = 8300
      defaultTemplateId = fhdds_submission_confirmation
      withdrawalEmailTemplateID = fhdds_submission_withdrawal
    }

    user-search {
      host = localhost
      port = 9984
    }

    enrolment-store-proxy {
      host = localhost
      port = 7775
    }
  }

}